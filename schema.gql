# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type UserRoleDto {
  id: Int!
  userRoleName: String!
  userRoleDescription: String
  version: Int!
}

type UserDto {
  id: Int!
  firstName: String
  middleName: String
  secondName: String
  displayName: String
  username: String!
  email: String
  phone: String
  rem: String
  userRole: UserRoleDto!
  version: Int!
  createdAt: DateTime!
  updatedAt: DateTime!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type AgreementStatusDto {
  id: Int!
  agreementStatusName: String!
  style: String
  version: Int!
}

type CityDto {
  id: Int!
  cityName: String
  version: Int!
}

type CustomerCategoryDto {
  id: Int!
  customerCategoryName: String!
  version: Int!
}

type PaymentFormDto {
  id: Int!
  paymentFormName: String!
  version: Int!
}

type SubjectCategoryDto {
  id: Int!
  subjectCategoryName: String!
  version: Int!
}

type SubjectDto {
  id: Int!
  subjectName: String!
  subjectCategory: SubjectCategoryDto!
  version: Int!
}

type WhatAboutUsDto {
  id: Int!
  whatAboutUsName: String!
  version: Int!
}

type CustomerDto {
  id: Int!
  user: UserDto!
  firstName: String
  middleName: String
  secondName: String
  displayName: String
  subjectCategory: SubjectCategoryDto
  subject: SubjectDto
  phone: String
  email: String
  passportNumber: String
  passportIssuedBy: String
  passportIssuedDate: String
  city: CityDto
  street: String
  apartment: String
  house: String
  customerCategory: CustomerCategoryDto
  paymentForm: PaymentFormDto
  companyName: String
  whatAboutUs: WhatAboutUsDto
  rem: String
  version: Int!
  createdAt: DateTime!
  updatedAt: DateTime!
}

type DistrictDto {
  id: Int!
  districtName: String!
  city: CityDto!
  version: Int!
}

type FamilyStatusDto {
  id: Int!
  familyStatusName: String!
  version: Int!
}

type QuarterDto {
  id: Int!
  quarterName: String!
  district: DistrictDto!
  version: Int!
}

type SocialStatusDto {
  id: Int!
  socialStatusName: String!
  version: Int!
}

type WardDto {
  id: Int!
  user: UserDto!
  customer: CustomerDto
  firstName: String
  middleName: String
  secondName: String
  displayName: String
  hbDate: DateTime
  passportNumber: String
  passportIssuedBy: String
  passportIssuedDate: DateTime
  socialStatuses: [SocialStatusDto!]
  familyStatus: FamilyStatusDto
  city: CityDto
  district: DistrictDto
  quarter: QuarterDto
  street: String
  house: String
  apartment: String
  floor: String
  entrance: String
  phone: String
  doctorsReport: Boolean
  events: String
  rem: String
  version: Int!
  createdAt: DateTime!
  updatedAt: DateTime!
}

type AgreementDto {
  id: Int!
  agreementNumber: String!
  agreementDate: DateTime!
  user: UserDto!
  customer: CustomerDto!
  ward: WardDto!
  agreementStatus: AgreementStatusDto!
  rem: String
  version: Int!
  createdAt: DateTime!
  updatedAt: DateTime!
}

type BonusCategoryDto {
  id: Int!
  bonusCategoryName: String!
  version: Int!
}

type BonusDto {
  id: Int!
  bonusCategory: BonusCategoryDto!
  bonusName: String!
  cost: Float!
  rem: String
  isCurrentOffer: Boolean!
  version: Int!
  createdAt: DateTime!
  updatedAt: DateTime!
}

type EmployeeStatusDto {
  id: Int!
  employeeStatusName: String!
  isEmployeeGroup: Boolean!
  isTimesheetGroup: Boolean!
  version: Int!
}

type OperationModeDto {
  id: Int!
  operationModeName: String!
  version: Int!
}

type TypeJobDto {
  id: Int!
  typeJobName: String!
  version: Int!
}

type EmployeeDto {
  id: Int!
  user: UserDto!
  firstName: String
  middleName: String
  secondName: String
  displayName: String
  hbDate: DateTime
  city: CityDto
  district: DistrictDto
  quarter: QuarterDto
  street: String
  house: String
  apartment: String
  education: String
  phone: String
  email: String
  passportNumber: String
  passportIssuedBy: String
  employeeStatus: EmployeeStatusDto
  operationMode: OperationModeDto
  typeJobs: [TypeJobDto!]
  rem: String
  version: Int!
  createdAt: DateTime!
  updatedAt: DateTime!
}

type EmployeeBonusDto {
  id: Int!
  user: UserDto!
  employee: EmployeeDto!
  bonusDate: DateTime!
  bonusCategory: BonusCategoryDto!
  bonus: BonusDto!
  cost: Float!
  rem: String
  version: Int!
  createdAt: DateTime!
  updatedAt: DateTime!
}

type PositionDto {
  id: Int!
  positionName: String!
  tariff: Float!
  isCurrentOffer: Boolean!
  version: Int!
  createdAt: DateTime!
  updatedAt: DateTime!
}

type EmployeePositionDto {
  id: Int!
  user: UserDto!
  employee: EmployeeDto!
  positionDateStart: DateTime!
  positionDateEnd: DateTime!
  position: PositionDto!
  tariff: Float!
  rem: String
  version: Int!
  createdAt: DateTime!
  updatedAt: DateTime!
}

type ExecutionStatusDto {
  id: Int!
  executionStatusName: String!
  style: String
  version: Int!
}

type PaymentStatusDto {
  id: Int!
  paymentStatusName: String!
  style: String
  version: Int!
}

type ServiceCategoryDto {
  id: Int!
  serviceCategoryName: String!
  version: Int!
}

type ServiceGuideDto {
  id: Int!
  serviceGuideName: String!
  serviceCategory: ServiceCategoryDto!
  showInCalc: Boolean!
  rem: String
  version: Int!
}

type ServiceGridDto {
  id: Int!
  serviceCategory: ServiceCategoryDto!
  serviceGuide: ServiceGuideDto!
  hoursFrom: Float!
  hoursTo: Float!
  workDayPrice: Float!
  restDayPrice: Float!
  rem: String
  version: Int!
  createdAt: DateTime!
  updatedAt: DateTime!
}

type ServicePackDto {
  id: Int!
  agreementData: String
  agreement: AgreementDto!
  startDate: DateTime
  endDate: DateTime
  totalCost: Int
  prepayment: Int
  debt: Int
  executionStatus: ExecutionStatusDto!
  paymentStatus: PaymentStatusDto!
  rem: String
  version: Int!
  createdAt: DateTime!
  updatedAt: DateTime!
}

type WardStageDto {
  id: Int!
  wardStageName: String!
  version: Int!
}

type WardStageProgressDto {
  id: Int!
  wardStageDate: DateTime!
  wardStage: WardStageDto!
  ward: WardDto!
  rem: String
  version: Int!
  createdAt: DateTime!
  updatedAt: DateTime!
}

type Query {
  user(id: Int!): UserDto

  """User search by name and pagination"""
  userList(textFilter: String, paging: Int!, page: Int!): [UserDto!]
  usersFind(ids: Int, usernames: String): [UserDto!]

  """Search for contract status by id"""
  agreementStatus(id: Int!): AgreementStatusDto

  """Search for contract status by name and pagination"""
  agreementStatusList(textFilter: String, paging: Int!, page: Int!): [AgreementStatusDto!]

  """Search for a contract by id"""
  agreement(id: Int!): AgreementDto

  """Contract search by number and pagination"""
  agreementList(textFilter: String, paging: Int!, page: Int!): [AgreementDto!]

  """Search contracts by numbers (exact match)"""
  agreementsNumbersFind(agreementNumber: String): [AgreementDto!]

  """Search category NIU by id"""
  bonusCategory(id: Int!): BonusCategoryDto

  """NIU search by name and pagination"""
  bonusCategoryList(textFilter: String, paging: Int!, page: Int!): [BonusCategoryDto!]

  """Search accrual or deduction by id"""
  bonus(id: Int!): BonusDto

  """Search accrual or retention by name and pagination"""
  bonusList(textFilter: String, paging: Int!, page: Int!): [BonusDto!]

  """Search for a settlement by id"""
  city(id: Int!): CityDto

  """Search for a settlement by name and pagination"""
  cityList(textFilter: String, paging: Int!, page: Int!): [CityDto!]

  """Search customer category by id"""
  customerCategory(id: Int!): CustomerCategoryDto

  """Search for a client category by name and pagination"""
  customerCategoryList(textFilter: String, paging: Int!, page: Int!): [CustomerCategoryDto!]

  """Search for a settlement by id"""
  customer(id: Int!): CustomerDto

  """Search for a settlement by name and pagination"""
  customerList(textFilter: String, paging: Int!, page: Int!): [CustomerDto!]

  """Поиск района по id"""
  district(id: Int!): DistrictDto

  """Поиск района по наименованию и пагинация"""
  districtList(textFilter: String, paging: Int!, page: Int!): [DistrictDto!]

  """Поиск НиУ по id"""
  employeeBonus(id: Int!): EmployeeBonusDto

  """Поиск НиУ по примечанию и пагинация"""
  employeeBonusList(textFilter: String, paging: Int!, page: Int!): [EmployeeBonusDto!]

  """Поиск должности сотрудника по id"""
  employeePosition(id: Int!): EmployeePositionDto

  """Поиск должности сотрудника по наименованию и пагинация"""
  employeePositionList(textFilter: String, paging: Int!, page: Int!): [EmployeePositionDto!]

  """Поиск статуса сотрудника по id"""
  employeeStatus(id: Int!): EmployeeStatusDto

  """Поиск статуса сотрудника по наименованию и пагинация"""
  employeeStatusList(textFilter: String, paging: Int!, page: Int!): [EmployeeStatusDto!]

  """Поиск сотрудника по id"""
  employee(id: Int!): EmployeeDto

  """Поиск сотрудника по имени и пагинация"""
  employeeList(textFilter: String, paging: Int!, page: Int!): [EmployeeDto!]

  """Поиск статуса выполнения пакета услуг по id"""
  executionStatus(id: Int!): ExecutionStatusDto

  """Поиск статуса выполнения пакета услуг по наименованию и пагинация"""
  executionStatusList(textFilter: String, paging: Int!, page: Int!): [ExecutionStatusDto!]

  """Поиск статуса семейнгог положения по id"""
  familyStatus(id: Int!): FamilyStatusDto

  """Поиск статуса семейнгог положения по наименованию и пагинация"""
  familyStatusList(textFilter: String, paging: Int!, page: Int!): [FamilyStatusDto!]

  """Поиск режима работы сотрудника по id"""
  operationMode(id: Int!): OperationModeDto

  """Поиск режима работы сотрудника по наименованию и пагинация"""
  operationModeList(textFilter: String, paging: Int!, page: Int!): [OperationModeDto!]

  """Поиск формы оплаты по id"""
  paymentForm(id: Int!): PaymentFormDto

  """Поиск формы оплаты по наименованию и пагинация"""
  paymentFormList(textFilter: String, paging: Int!, page: Int!): [PaymentFormDto!]

  """Поиск статуса оплаты по id"""
  paymentStatus(id: Int!): PaymentStatusDto

  """Поиск статуса оплаты по наименованию и пагинация"""
  paymentStatusList(textFilter: String, paging: Int!, page: Int!): [PaymentStatusDto!]

  """Поиск населённого пункта по id"""
  position(id: Int!): PositionDto

  """Поиск населённого пункта по наименованию и пагинация"""
  positionList(textFilter: String, paging: Int!, page: Int!): [PositionDto!]

  """Поиск квартала по id"""
  quarter(id: Int!): QuarterDto

  """Поиск квартала по наименованию и пагинация"""
  quarterList(textFilter: String, paging: Int!, page: Int!): [QuarterDto!]

  """Поиск категории услуги по id"""
  serviceCategory(id: Int!): ServiceCategoryDto

  """Поиск категории услуги по наименованию и пагинация"""
  serviceCategoryList(textFilter: String, paging: Int!, page: Int!): [ServiceCategoryDto!]

  """Поиск услуги по id"""
  serviceGrid(id: Int!): ServiceGridDto

  """
  Поиск услуги по наименованию serviceGuideName из родительской таблицы s_service_guide и пагинация
  """
  serviceGridList(textFilter: String, paging: Int!, page: Int!): [ServiceGridDto!]

  """Поиск услуги по id"""
  serviceGuide(id: Int!): ServiceGuideDto

  """Поиск услуги по наименованию и пагинация"""
  serviceGuideList(textFilter: String, paging: Int!, page: Int!): [ServiceGuideDto!]

  """Поиск пакета услуг по id"""
  servicePack(id: Int!): ServicePackDto

  """
  Поиск пакета услуг по № договора или фамилиям заказчика или подопечного представленных в формате agreementNumber (customerSecondName/wardSecondName) и пагинация
  """
  servicePackList(textFilter: String, paging: Int!, page: Int!): [ServicePackDto!]

  """Поиск социального статуса по id"""
  socialStatus(id: Int!): SocialStatusDto

  """Поиск социального статуса по наименованию и пагинация"""
  socialStatusList(textFilter: String, paging: Int!, page: Int!): [SocialStatusDto!]

  """Поиск категории субъекта по id"""
  subjectCategory(id: Int!): SubjectCategoryDto

  """Поиск категории субъекта по наименованию и пагинация"""
  subjectCategoryList(textFilter: String, paging: Int!, page: Int!): [SubjectCategoryDto!]

  """Поиск субъекта по id"""
  subject(id: Int!): SubjectDto

  """Поиск субъекта по наименованию и пагинация"""
  subjectList(textFilter: String, paging: Int!, page: Int!): [SubjectDto!]

  """Поиск типа работы по id"""
  typeJob(id: Int!): TypeJobDto

  """Поиск типа работы по наименованию и пагинация"""
  typeJobList(textFilter: String, paging: Int!, page: Int!): [TypeJobDto!]

  """Роль пользователя"""
  userRole(id: Int!): UserRoleDto

  """
  Поиск роли пользователя по наименованию роли (userRoleName) и пагинация
  """
  userRoleList(textFilter: String, paging: Int!, page: Int!): [UserRoleDto!]

  """
  Поиск группы ролей по [userRoleName]. Если отправить пустой массив, то возвращаются все роли.
  """
  userRoles(userRoleNames: [String!]): [UserRoleDto!]

  """Поиск статуса прогресса работы с подопечным по id"""
  wardStageProgress(id: Int!): WardStageProgressDto

  """
  Поиск статуса прогресса работы с подопечным по полю примечание (rem) и пагинация
  """
  wardStageProgressList(wardId: Int, textFilter: String, paging: Int!, page: Int!): [WardStageProgressDto!]

  """Поиск статуса состояния работы с подопечным по id"""
  wardStage(id: Int!): WardStageDto

  """
  Поиск статуса состояния работы с подопечным по наименованию и пагинация
  """
  wardStageList(textFilter: String, paging: Int!, page: Int!): [WardStageDto!]

  """Поиск подопечного по id"""
  ward(id: Int!): WardDto

  """Поиск подопечного по имени и пагинация"""
  wardList(textFilter: String, paging: Int!, page: Int!): [WardDto!]

  """Поиск населённого пункта по id"""
  whatAboutUs(id: Int!): WhatAboutUsDto

  """Поиск населённого пункта по наименованию и пагинация"""
  whatAboutUsList(textFilter: String, paging: Int!, page: Int!): [WhatAboutUsDto!]
}

type Mutation {
  userCreate(data: UserCreateInputDto!): UserDto!
  userUpdate(data: UserUpdateInputDto!): UserDto!
  userDelete(data: UserDeleteInputDto!): Int!
  agreementStatusCreate(data: AgreementStatusCreateInputDto!): AgreementStatusDto!
  agreementStatusUpdate(data: AgreementStatusUpdateInputDto!): AgreementStatusDto!
  agreementStatusDelete(data: AgreementStatusDeleteInputDto!): Int!
  agreementCreate(data: AgreementCreateInputDto!): AgreementDto!
  agreementUpdate(data: AgreementUpdateInputDto!): AgreementDto!
  agreementDelete(data: AgreementDeleteInputDto!): Int!
  bonusCategoryCreate(data: BonusCategoryCreateInputDto!): BonusCategoryDto!
  bonusCategoryUpdate(data: BonusCategoryUpdateInputDto!): BonusCategoryDto!
  bonusCategoryDelete(data: BonusCategoryDeleteInputDto!): Int!
  bonusCreate(data: BonusCreateInputDto!): BonusDto!
  bonusUpdate(data: BonusUpdateInputDto!): BonusDto!
  bonusDelete(data: BonusDeleteInputDto!): Int!
  cityCreate(data: CityCreateInputDto!): CityDto!
  cityUpdate(data: CityUpdateInputDto!): CityDto!
  cityDelete(data: CityDeleteInputDto!): Int!
  customerCategoryCreate(data: CustomerCategoryCreateInputDto!): CustomerCategoryDto!
  customerCategoryUpdate(data: CustomerCategoryUpdateInputDto!): CustomerCategoryDto!
  customerCategoryDelete(data: CustomerCategoryDeleteInputDto!): Int!
  customerCreate(data: CustomerCreateInputDto!): CustomerDto!
  customerUpdate(data: CustomerUpdateInputDto!): CustomerDto!
  customerDelete(data: CustomerDeleteInputDto!): Int!
  districtCreate(data: DistrictCreateInputDto!): DistrictDto!
  districtUpdate(data: DistrictUpdateInputDto!): DistrictDto!
  districtDelete(data: DistrictDeleteInputDto!): Int!
  employeeBonusCreate(data: EmployeeBonusCreateInputDto!): EmployeeBonusDto!
  employeeBonusUpdate(data: EmployeeBonusUpdateInputDto!): EmployeeBonusDto!
  employeeBonusDelete(data: EmployeeBonusDeleteInputDto!): Int!
  employeePositionCreate(data: EmployeePositionCreateInputDto!): EmployeePositionDto!
  employeePositionUpdate(data: EmployeePositionUpdateInputDto!): EmployeePositionDto!
  employeePositionDelete(data: EmployeePositionDeleteInputDto!): Int!
  employeeStatusCreate(data: EmployeeStatusCreateInputDto!): EmployeeStatusDto!
  employeeStatusUpdate(data: EmployeeStatusUpdateInputDto!): EmployeeStatusDto!
  employeeStatusDelete(data: EmployeeStatusDeleteInputDto!): Int!
  employeeCreate(data: EmployeeCreateInputDto!): EmployeeDto!
  employeeUpdate(data: EmployeeUpdateInputDto!): EmployeeDto!
  employeeDelete(data: EmployeeDeleteInputDto!): Int!
  executionStatusCreate(data: ExecutionStatusCreateInputDto!): ExecutionStatusDto!
  executionStatusUpdate(data: ExecutionStatusUpdateInputDto!): ExecutionStatusDto!
  executionStatusDelete(data: ExecutionStatusDeleteInputDto!): Int!
  familyStatusCreate(data: FamilyStatusCreateInputDto!): FamilyStatusDto!
  familyStatusUpdate(data: FamilyStatusUpdateInputDto!): FamilyStatusDto!
  familyStatusDelete(data: FamilyStatusDeleteInputDto!): Int!
  operationModeCreate(data: OperationModeCreateInputDto!): OperationModeDto!
  operationModeUpdate(data: OperationModeUpdateInputDto!): OperationModeDto!
  operationModeDelete(data: OperationModeDeleteInputDto!): Int!
  paymentFormCreate(data: PaymentFormCreateInputDto!): PaymentFormDto!
  paymentFormUpdate(data: PaymentFormUpdateInputDto!): PaymentFormDto!
  paymentFormDelete(data: PaymentFormDeleteInputDto!): Int!
  paymentStatusCreate(data: PaymentStatusCreateInputDto!): PaymentStatusDto!
  paymentStatusUpdate(data: PaymentStatusUpdateInputDto!): PaymentStatusDto!
  paymentStatusDelete(data: PaymentStatusDeleteInputDto!): Int!
  positionCreate(data: PositionCreateInputDto!): PositionDto!
  positionUpdate(data: PositionUpdateInputDto!): PositionDto!
  positionDelete(data: PositionDeleteInputDto!): Int!
  quarterCreate(data: QuarterCreateInputDto!): QuarterDto!
  quarterUpdate(data: QuarterUpdateInputDto!): QuarterDto!
  quarterDelete(data: QuarterDeleteInputDto!): Int!
  serviceCategoryCreate(data: ServiceCategoryCreateInputDto!): ServiceCategoryDto!
  serviceCategoryUpdate(data: ServiceCategoryUpdateInputDto!): ServiceCategoryDto!
  serviceCategoryDelete(data: ServiceCategoryDeleteInputDto!): Int!
  serviceGridCreate(data: ServiceGridCreateInputDto!): ServiceGridDto!
  serviceGridUpdate(data: ServiceGridUpdateInputDto!): ServiceGridDto!
  serviceGridDelete(data: ServiceGridDeleteInputDto!): Int!
  serviceGuideCreate(data: ServiceGuideCreateInputDto!): ServiceGuideDto!
  serviceGuideUpdate(data: ServiceGuideUpdateInputDto!): ServiceGuideDto!
  serviceGuideDelete(data: ServiceGuideDeleteInputDto!): Int!
  servicePackCreate(data: ServicePackCreateInputDto!): ServicePackDto!
  servicePackUpdate(data: ServicePackUpdateInputDto!): ServicePackDto!
  servicePackDelete(data: ServicePackDeleteInputDto!): Int!
  socialStatusCreate(data: SocialStatusCreateInputDto!): SocialStatusDto!
  socialStatusUpdate(data: SocialStatusUpdateInputDto!): SocialStatusDto!
  socialStatusDelete(data: SocialStatusDeleteInputDto!): Int!
  subjectCategoryCreate(data: SubjectCategoryCreateInputDto!): SubjectCategoryDto!
  subjectCategoryUpdate(data: SubjectCategoryUpdateInputDto!): SubjectCategoryDto!
  subjectCategoryDelete(data: SubjectCategoryDeleteInputDto!): Int!
  subjectCreate(data: SubjectCreateInputDto!): SubjectDto!
  subjectUpdate(data: SubjectUpdateInputDto!): SubjectDto!
  subjectDelete(data: SubjectDeleteInputDto!): Int!
  typeJobCreate(data: TypeJobCreateInputDto!): TypeJobDto!
  typeJobUpdate(data: TypeJobUpdateInputDto!): TypeJobDto!
  typeJobDelete(data: TypeJobDeleteInputDto!): Int!
  userRoleCreate(data: UserRoleCreateInputDto!): UserRoleDto!
  userRoleUpdate(data: UserRoleUpdateInputDto!): UserRoleDto!
  userRoleDelete(data: UserRoleDeleteInputDto!): Int!
  wardStageProgressCreate(data: WardStageProgressCreateInputDto!): WardStageProgressDto!
  wardStageProgressUpdate(data: WardStageProgressUpdateInputDto!): WardStageProgressDto!
  wardStageProgressDelete(data: WardStageProgressDeleteInputDto!): Int!
  wardStageCreate(data: WardStageCreateInputDto!): WardStageDto!
  wardStageUpdate(data: WardStageUpdateInputDto!): WardStageDto!
  wardStageDelete(data: WardStageDeleteInputDto!): Int!
  wardCreate(data: WardCreateInputDto!): WardDto!
  wardUpdate(data: WardUpdateInputDto!): WardDto!
  wardDelete(data: WardDeleteInputDto!): Int!
  whatAboutUsCreate(data: WhatAboutUsCreateInputDto!): WhatAboutUsDto!
  whatAboutUsUpdate(data: WhatAboutUsUpdateInputDto!): WhatAboutUsDto!
  whatAboutUsDelete(data: WhatAboutUsDeleteInputDto!): Int!
}

input UserCreateInputDto {
  firstName: String
  middleName: String
  secondName: String
  username: String!
  passwordHash: String!
  email: String
  phone: String
  rem: String
  userRoleName: String!
}

input UserUpdateInputDto {
  id: Int!
  firstName: String
  middleName: String
  secondName: String
  username: String!
  passwordHash: String!
  email: String
  phone: String
  rem: String
  userRoleName: String!
  version: Int!
}

input UserDeleteInputDto {
  id: Int!
  version: Int!
}

input AgreementStatusCreateInputDto {
  agreementStatusName: String!
  style: String
}

input AgreementStatusUpdateInputDto {
  id: Int!
  agreementStatusName: String!
  style: String
  version: Int!
}

input AgreementStatusDeleteInputDto {
  id: Int!
  version: Int!
}

input AgreementCreateInputDto {
  agreementNumber: String!
  agreementDate: String!
  userId: Int!
  customerId: Int!
  wardId: Int!
  agreementStatusId: Int!
  rem: String
}

input AgreementUpdateInputDto {
  id: Int!
  agreementNumber: String!
  agreementDate: String!
  userId: Int!
  customerId: Int!
  wardId: Int!
  agreementStatusId: Int!
  rem: String
  version: Int!
}

input AgreementDeleteInputDto {
  id: Int!
  version: Int!
}

input BonusCategoryCreateInputDto {
  bonusCategoryName: String!
}

input BonusCategoryUpdateInputDto {
  id: Int!
  bonusCategoryName: String!
  version: Int!
}

input BonusCategoryDeleteInputDto {
  id: Int!
  version: Int!
}

input BonusCreateInputDto {
  bonusCategoryId: Int!
  bonusName: String!
  cost: Float!
  rem: String
  isCurrentOffer: Boolean!
}

input BonusUpdateInputDto {
  id: Int!
  bonusCategoryId: Int!
  bonusName: String!
  cost: Float!
  rem: String
  isCurrentOffer: Boolean!
  version: Int!
}

input BonusDeleteInputDto {
  id: Int!
  version: Int!
}

input CityCreateInputDto {
  cityName: String!
}

input CityUpdateInputDto {
  id: Int!
  cityName: String!
  version: Int!
}

input CityDeleteInputDto {
  id: Int!
  version: Int!
}

input CustomerCategoryCreateInputDto {
  customerCategoryName: String!
}

input CustomerCategoryUpdateInputDto {
  id: Int!
  customerCategoryName: String!
  version: Int!
}

input CustomerCategoryDeleteInputDto {
  id: Int!
  version: Int!
}

input CustomerCreateInputDto {
  userId: Int!
  firstName: String
  middleName: String
  secondName: String
  subjectCategoryId: Int
  subjectId: Int
  phone: String
  email: String
  passportNumber: String
  passportIssuedBy: String
  passportIssuedDate: DateTime
  cityId: Int
  street: String
  apartment: String
  house: String
  customerCategoryId: Int
  paymentFormId: Int
  companyName: String
  whatAboutUsId: Int
  rem: String
}

input CustomerUpdateInputDto {
  id: Int!
  userId: Int!
  firstName: String
  middleName: String
  secondName: String
  subjectCategoryId: Int
  subjectId: Int
  phone: String
  email: String
  passportNumber: String
  passportIssuedBy: String
  passportIssuedDate: DateTime
  cityId: Int
  street: String
  apartment: String
  house: String
  customerCategoryId: Int
  paymentFormId: Int
  companyName: String
  whatAboutUsId: Int
  rem: String
  version: Int!
}

input CustomerDeleteInputDto {
  id: Int!
  version: Int!
}

input DistrictCreateInputDto {
  districtName: String!
  cityId: Int!
}

input DistrictUpdateInputDto {
  id: Int!
  districtName: String!
  cityId: Int!
  version: Int!
}

input DistrictDeleteInputDto {
  id: Int!
  version: Int!
}

input EmployeeBonusCreateInputDto {
  userId: Int!
  employeeId: Int!
  bonusDate: DateTime!
  bonusCategoryId: Int!
  bonusId: Int!
  cost: Float!
  rem: String
}

input EmployeeBonusUpdateInputDto {
  id: Int!
  userId: Int!
  employeeId: Int!
  bonusDate: DateTime!
  bonusCategoryId: Int!
  bonusId: Int!
  cost: Float!
  rem: String
  version: Int!
}

input EmployeeBonusDeleteInputDto {
  id: Int!
  version: Int!
}

input EmployeePositionCreateInputDto {
  userId: Int!
  employeeId: Int!
  positionDateStart: DateTime!
  positionDateEnd: DateTime!
  positionId: Int!
  tariff: Float!
  rem: String
}

input EmployeePositionUpdateInputDto {
  id: Int!
  userId: Int!
  employeeId: Int!
  positionDateStart: DateTime!
  positionDateEnd: DateTime!
  positionId: Int!
  tariff: Float!
  rem: String
  version: Int!
}

input EmployeePositionDeleteInputDto {
  id: Int!
  version: Int!
}

input EmployeeStatusCreateInputDto {
  employeeStatusName: String!
  isEmployeeGroup: Boolean!
  isTimesheetGroup: Boolean!
}

input EmployeeStatusUpdateInputDto {
  id: Int!
  employeeStatusName: String!
  isEmployeeGroup: Boolean!
  isTimesheetGroup: Boolean!
  version: Int!
}

input EmployeeStatusDeleteInputDto {
  id: Int!
  version: Int!
}

input EmployeeCreateInputDto {
  userId: Int!
  firstName: String
  middleName: String
  secondName: String
  displayName: String
  hbDate: DateTime
  cityId: Int
  districtId: Int
  quarterId: Int
  street: String
  house: String
  apartment: String
  education: String
  phone: String
  email: String
  passportIssuedBy: String
  passportIssuedDate: DateTime
  employeeStatusId: Int
  operationModeId: Int
  typeJobsIds: [Int!]
  rem: String
}

input EmployeeUpdateInputDto {
  id: Int!
  userId: Int!
  firstName: String
  middleName: String
  secondName: String
  displayName: String
  hbDate: DateTime
  cityId: Int
  districtId: Int
  quarterId: Int
  street: String
  house: String
  apartment: String
  education: String
  phone: String
  email: String
  passportIssuedBy: String
  passportIssuedDate: DateTime
  employeeStatusId: Int
  operationModeId: Int
  typeJobsIds: [Int!]
  rem: String
  version: Int!
}

input EmployeeDeleteInputDto {
  id: Int!
  version: Int!
}

input ExecutionStatusCreateInputDto {
  executionStatusName: String!
  style: String
}

input ExecutionStatusUpdateInputDto {
  id: Int!
  executionStatusName: String!
  style: String
  version: Int!
}

input ExecutionStatusDeleteInputDto {
  id: Int!
  version: Int!
}

input FamilyStatusCreateInputDto {
  familyStatusName: String!
}

input FamilyStatusUpdateInputDto {
  id: Int!
  familyStatusName: String!
  version: Int!
}

input FamilyStatusDeleteInputDto {
  id: Int!
  version: Int!
}

input OperationModeCreateInputDto {
  operationModeName: String!
}

input OperationModeUpdateInputDto {
  id: Int!
  operationModeName: String!
  version: Int!
}

input OperationModeDeleteInputDto {
  id: Int!
  version: Int!
}

input PaymentFormCreateInputDto {
  paymentFormName: String!
}

input PaymentFormUpdateInputDto {
  id: Int!
  paymentFormName: String!
  version: Int!
}

input PaymentFormDeleteInputDto {
  id: Int!
  version: Int!
}

input PaymentStatusCreateInputDto {
  paymentStatusName: String!
  style: String
}

input PaymentStatusUpdateInputDto {
  id: Int!
  paymentStatusName: String!
  style: String
  version: Int!
}

input PaymentStatusDeleteInputDto {
  id: Int!
  version: Int!
}

input PositionCreateInputDto {
  positionName: String!
  tariff: Float!
  isCurrentOffer: Boolean!
}

input PositionUpdateInputDto {
  id: Int!
  positionName: String!
  tariff: Float!
  isCurrentOffer: Boolean!
  version: Int!
}

input PositionDeleteInputDto {
  id: Int!
  version: Int!
}

input QuarterCreateInputDto {
  quarterName: String!
  districtId: Int!
}

input QuarterUpdateInputDto {
  id: Int!
  quarterName: String!
  districtId: Int!
  version: Int!
}

input QuarterDeleteInputDto {
  id: Int!
  version: Int!
}

input ServiceCategoryCreateInputDto {
  serviceCategoryName: String!
}

input ServiceCategoryUpdateInputDto {
  id: Int!
  serviceCategoryName: String!
  version: Int!
}

input ServiceCategoryDeleteInputDto {
  id: Int!
  version: Int!
}

input ServiceGridCreateInputDto {
  serviceCategoryId: Int!
  serviceGuideId: Int!
  hoursFrom: Float!
  hoursTo: Float!
  workDayPrice: Float!
  restDayPrice: Float!
  rem: String
}

input ServiceGridUpdateInputDto {
  id: Int!
  serviceCategoryId: Int!
  serviceGuideId: Int!
  hoursFrom: Float!
  hoursTo: Float!
  workDayPrice: Float!
  restDayPrice: Float!
  rem: String
  version: Int!
}

input ServiceGridDeleteInputDto {
  id: Int!
  version: Int!
}

input ServiceGuideCreateInputDto {
  serviceGuideName: String!
  serviceCategoryId: Int!
  showInCalc: Boolean!
  rem: String
}

input ServiceGuideUpdateInputDto {
  id: Int!
  serviceGuideName: String!
  serviceCategoryId: Int!
  showInCalc: Boolean!
  rem: String
  version: Int!
}

input ServiceGuideDeleteInputDto {
  id: Int!
  version: Int!
}

input ServicePackCreateInputDto {
  agreementId: Int!
  totalCost: Int
  prepayment: Int
  debt: Int
  executionStatusId: Int!
  paymentStatusId: Int!
  rem: String
}

input ServicePackUpdateInputDto {
  id: Int!
  agreementId: Int!
  totalCost: Int
  prepayment: Int
  debt: Int
  executionStatusId: Int!
  paymentStatusId: Int!
  rem: String
  version: Int!
}

input ServicePackDeleteInputDto {
  id: Int!
  version: Int!
}

input SocialStatusCreateInputDto {
  socialStatusName: String!
}

input SocialStatusUpdateInputDto {
  id: Int!
  socialStatusName: String!
  version: Int!
}

input SocialStatusDeleteInputDto {
  id: Int!
  version: Int!
}

input SubjectCategoryCreateInputDto {
  subjectCategoryName: String!
}

input SubjectCategoryUpdateInputDto {
  id: Int!
  subjectCategoryName: String!
  version: Int!
}

input SubjectCategoryDeleteInputDto {
  id: Int!
  version: Int!
}

input SubjectCreateInputDto {
  subjectName: String!
  subjectCategoryId: Int!
}

input SubjectUpdateInputDto {
  id: Int!
  subjectName: String!
  subjectCategoryId: Int!
  version: Int!
}

input SubjectDeleteInputDto {
  id: Int!
  version: Int!
}

input TypeJobCreateInputDto {
  typeJobName: String!
}

input TypeJobUpdateInputDto {
  id: Int!
  typeJobName: String!
  version: Int!
}

input TypeJobDeleteInputDto {
  id: Int!
  version: Int!
}

input UserRoleCreateInputDto {
  userRoleName: String!
  userRoleDescription: String
}

input UserRoleUpdateInputDto {
  id: Int!
  userRoleName: String
  userRoleDescription: String
  version: Int!
}

input UserRoleDeleteInputDto {
  id: Int!
  version: Int!
}

input WardStageProgressCreateInputDto {
  wardStageDate: DateTime!
  wardStageId: Int!
  wardId: Int!
  rem: String
}

input WardStageProgressUpdateInputDto {
  id: Int!
  wardStageDate: DateTime!
  wardStageId: Int!
  wardId: Int!
  rem: String
  version: Int!
}

input WardStageProgressDeleteInputDto {
  id: Int!
  version: Int!
}

input WardStageCreateInputDto {
  wardStageName: String!
}

input WardStageUpdateInputDto {
  id: Int!
  wardStageName: String!
  version: Int!
}

input WardStageDeleteInputDto {
  id: Int!
  version: Int!
}

input WardCreateInputDto {
  userId: Int!
  customerId: Int
  firstName: String
  middleName: String
  secondName: String
  hbDate: DateTime
  passportNumber: String
  passportIssuedBy: String
  passportIssuedDate: DateTime
  socialStatusesIds: [Int!]
  familyStatusId: Int
  cityId: Int
  districtId: Int
  quarterId: Int
  street: String
  house: String
  apartment: String
  floor: String
  entrance: String
  phone: String
  doctorsReport: Boolean
  events: String
  rem: String
}

input WardUpdateInputDto {
  id: Int!
  userId: Int!
  customerId: Int
  firstName: String
  middleName: String
  secondName: String
  hbDate: DateTime
  passportNumber: String
  passportIssuedBy: String
  passportIssuedDate: DateTime
  socialStatusesIds: [Int!]
  familyStatusId: Int
  cityId: Int
  districtId: Int
  quarterId: Int
  street: String
  house: String
  apartment: String
  floor: String
  entrance: String
  phone: String
  doctorsReport: Boolean
  events: String
  rem: String
  version: Int!
}

input WardDeleteInputDto {
  id: Int!
  version: Int!
}

input WhatAboutUsCreateInputDto {
  whatAboutUsName: String!
}

input WhatAboutUsUpdateInputDto {
  id: Int!
  whatAboutUsName: String!
  version: Int!
}

input WhatAboutUsDeleteInputDto {
  id: Int!
  version: Int!
}
